{"version":3,"sources":["components/InfoText.js","components/FormField.js","components/RadioButtonGroup.js","actions/contact.js","components/ContactForm.js","components/TableComp.js","App.js","serviceWorker.js","reducers/contact.js","reducers/index.js","utils/localstorage.js","apis/contact.js","sagas/contact.js","sagas/index.js","index.js","utils/formValidation.js"],"names":["StyledSpan","styled","span","type","InfoText","props","value","TextWrapper","div","FormField","id","label","name","errors","TextField","margin","autoComplete","onChange","changeData","required","length","useStyles","makeStyles","theme","root","display","formControl","marginTop","group","spacing","propTypes","PropTypes","string","isRequired","object","func","RadioButtonsGroup","classes","className","component","aria-label","control","addContactWatcher","data","resolve","reject","payload","contactListWatcher","updateListWatcher","deleteContactWatcher","CountryRegionWrapper","ActionBar","connect","dispatch","bindActionCreators","useState","contact","address","phone","email","gender","country","region","note","dirty","newRecordAdded","contactState","setContactState","useEffect","updateError","errTxt","len","validEmailRegex","test","handleChange","event","preventDefault","target","clearContact","noValidate","RadioButtonGroup","select","CountryRegionData","map","option","index","MenuItem","key","split","regionPair","regionName","getRegions","variant","color","onClick","Object","keys","forEach","validateForm","Promise","then","catch","error","console","log","StyledTableCell","withStyles","head","backgroundColor","palette","common","black","white","body","fontSize","TableCell","StyledTableRow","background","default","TableRow","StyledButton","padding","minWidth","borderRadius","Button","width","overflowX","table","tags","array","records","tag","row","scope","deleteItem","flexGrow","paper","textAlign","text","secondary","FormWrapper","TableCompStyled","TableComp","state","contacts","list","Grid","container","item","xs","sm","Boolean","window","location","hostname","match","handleActions","UPDATE_LIST_WATCHER","assign","CONTACT_LIST_WATCHER","combineReducers","storedList","JSON","parse","localStorage","getItem","saveToStorage","setItem","stringify","contactListApi","addContactApi","push","editContactApi","action","deleteContactApi","splice","getContactApi","contactListEffectSaga","addContactEffectSaga","editContactEffectSaga","getContactEffectSaga","deleteContactEffectSaga","contactListWatcherSaga","addContactWatcherSaga","editContactWatcherSaga","getContactWatcherSaga","deleteContactWatcherSaga","call","put","takeLatest","rootSaga","all","sagaMiddleware","createSagaMiddleware","store","createStore","reducer","applyMiddleware","logger","run","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","RegExp","module","exports","valid","values","val"],"mappings":"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","file":"static/js/main.9e3fb392.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst StyledSpan = styled.span`\n\tfont-size: 14px;\n\t${({type}) => type === 'error' ? `color: #f50057` : `color: #00a152`}}\n`;\n\nconst InfoText = (props) => {\n\treturn (<StyledSpan type={props.type}>{props.value}</StyledSpan>)\n};\n\nInfoText.propTypes = {\n\tvalue: PropTypes.string.isRequired,\n\ttype: PropTypes.string.isRequired,\n};\n\nexport default InfoText;","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport styled from 'styled-components';\nimport InfoText from \"./InfoText\";\nimport PropTypes from \"prop-types\";\n\nconst TextWrapper = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n`;\n\nconst FormField = (props) => {\n\tconst {id, label, name, value, errors} = props;\n\treturn (\n\t\t<TextWrapper>\n\t\t\t<TextField\n\t\t\t\tid={id}\n\t\t\t\tlabel={label}\n\t\t\t\tname={name}\n\t\t\t\tvalue={value}\n\t\t\t\tmargin=\"normal\"\n\t\t\t\tautoComplete={'none'}\n\t\t\t\tonChange={props.changeData(name)}\n\t\t\t\trequired={true}\n\t\t\t/>\n\t\t\t{errors[name].length > 0 &&\n\t\t\t<InfoText value={errors[name]} type={'error'} />}\n\t\t</TextWrapper>\n\t);\n};\n\nFormField.propTypes = {\n\tlabel: PropTypes.string.isRequired,\n\tname: PropTypes.string.isRequired,\n\tvalue: PropTypes.string.isRequired,\n\tchangeData: PropTypes.func.isRequired\n};\n\nexport default FormField;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles/index';\nimport Radio from '@material-ui/core/Radio/index';\nimport RadioGroup from '@material-ui/core/RadioGroup/index';\nimport FormControlLabel from '@material-ui/core/FormControlLabel/index';\nimport FormControl from '@material-ui/core/FormControl/index';\nimport FormLabel from '@material-ui/core/FormLabel/index';\nimport InfoText from './InfoText';\nimport PropTypes from \"prop-types\";\nimport FormField from \"./FormField\";\n\nconst useStyles = makeStyles(theme => ({\n\troot: {\n\t\tdisplay: 'flex',\n\t},\n\tformControl: {\n\t\tmarginTop: '30px',\n\t},\n\tgroup: {\n\t\tmargin: theme.spacing(1, 0),\n\t},\n}));\n\nconst RadioButtonsGroup = (props) => {\n\tconst classes = useStyles();\n\tconst {name, errors, value} = props;\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<FormControl component=\"fieldset\" className={classes.formControl}>\n\t\t\t\t<FormLabel component=\"legend\">Gender *</FormLabel>\n\t\t\t\t<RadioGroup\n\t\t\t\t\taria-label=\"gender\"\n\t\t\t\t\tname=\"gender\"\n\t\t\t\t\tclassName={classes.group}\n\t\t\t\t\tvalue={value}\n\t\t\t\t\tonChange={props.changeData('gender')}\n\t\t\t\t>\n\t\t\t\t\t<FormControlLabel value=\"female\" control={<Radio />} label=\"Female\" />\n\t\t\t\t\t<FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\n\t\t\t\t</RadioGroup>\n\t\t\t\t{errors[name].length > 0 &&\n\t\t\t\t<InfoText value={errors[name]} type={'error'} />}\n\t\t\t</FormControl>\n\t\t</div>\n\t);\n};\n\nFormField.propTypes = {\n\tname: PropTypes.string.isRequired,\n\terrors: PropTypes.object.isRequired,\n\tchangeData: PropTypes.func.isRequired,\n\tvalue: PropTypes.string.isRequired\n};\n\nexport default RadioButtonsGroup;","export function addContactWatcher(data, resolve, reject) {\n  return {\n    type: 'ADD_CONTACT_WATCHER',\n    payload: data,\n    resolve: resolve,\n    reject: reject\n  };\n}\n\nexport function contactListWatcher(data) {\n  return {\n    type: 'CONTACT_LIST_WATCHER',\n    payload: data\n  };\n}\n\nexport function updateListWatcher(data) {\n  return {\n    type: 'UPDATE_LIST_WATCHER',\n    payload: data\n  };\n}\n\nexport function contactEditWatcher(data, id) {\n  return {\n    type: 'CONTACT_EDIT_WATCHER',\n    payload: data,\n    id\n  };\n}\n\nexport function getContactWatcher(data) {\n  return {\n    type: 'GET_CONTACT_WATCHER',\n    payload: data\n  };\n}\n\nexport function deleteContactWatcher(data, resolve, reject) {\n  return {\n    type: 'DELETE_CONTACT_WATCHER',\n    payload: data,\n    resolve: resolve,\n    reject: reject\n  };\n}\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport styled  from 'styled-components';\nimport Button from '@material-ui/core/Button/index';\nimport { CountryRegionData } from 'react-country-region-selector';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport RadioButtonGroup from './RadioButtonGroup';\nimport FormField from './FormField';\nimport InfoText from \"./InfoText\";\nimport { validateForm, validEmailRegex } from '../utils/formValidation';\nimport { bindActionCreators } from 'redux';\nimport  { addContactWatcher, contactListWatcher }  from '../actions';\n\nconst CountryRegionWrapper = styled.div`\n\tmargin: 10px 0;\n\tdisplay: flex; \n\tflex-direction: column;\n`;\n\nconst ActionBar = styled.div`\n\tpadding: 20px 0;\n\tdisplay: flex;\n\tjustify-content: space-between;\n`;\n\nconst ContactForm = props => {\n\tconst getDefaultContact = () => {\n\t\treturn {\n\t\t\tname:'',\n\t\t\taddress: '',\n\t\t\tphone: '',\n\t\t\temail: '',\n\t\t\tgender: '',\n\t\t\tcountry: '',\n\t\t\tregion: '',\n\t\t\tnote:''\n\t\t}\n\t};\n\n\tconst [contactState, setContactState] = useState({\n\t\tcontact: getDefaultContact(),\n\t\terrors: getDefaultContact(),\n\t\tdirty: false,\n\t\tnewRecordAdded: false\n\t});\n\n\tconst getRegions = country => {\n\t\tif (!country) {\n\t\t\treturn [];\n\t\t}\n\t\treturn country[2].split(\"|\").map(regionPair => {\n\t\t\tlet [regionName, regionShortCode = null] = regionPair.split(\"~\");\n\t\t\treturn regionName;\n\t\t});\n\t};\n\n\tuseEffect(() => {\n\t\tprops.contactListWatcher({});\n\t}, []);\n\n\tconst updateError = (value, name) => {\n\t\tlet errors = contactState.errors;\n\t\tlet errTxt = '';\n\t\tconst len = value.length;\n\n\t\tswitch (name) {\n\t\t\tcase 'name':\n\t\t\t\terrTxt =\n\t\t\t\t\t(len < 3 || len > 20)\n\t\t\t\t\t\t? 'Name must be min 3 characters or max 20 long!'\n\t\t\t\t\t\t: '';\n\t\t\t\tbreak;\n\t\t\tcase 'address':\n\t\t\t\terrTxt =\n\t\t\t\t\t(len < 3 || len > 100)\n\t\t\t\t\t\t? 'Address must be min 3 characters or max 100 long!'\n\t\t\t\t\t\t: '';\n\t\t\t\tbreak;\n\t\t\tcase 'phone':\n\t\t\t\terrTxt =\n\t\t\t\t\t(len < 10 || len > 10)\n\t\t\t\t\t\t? 'Enter valid 10 digit mobile no'\n\t\t\t\t\t\t: '';\n\t\t\t\tbreak;\n\t\t\tcase 'email':\n\t\t\t\terrTxt =\n\t\t\t\t\tvalidEmailRegex.test(value)\n\t\t\t\t\t\t? ''\n\t\t\t\t\t\t: 'Email is not valid!';\n\t\t\t\tbreak;\n\t\t\tcase 'gender':\n\t\t\t\terrTxt =\n\t\t\t\t\tlen < 4\n\t\t\t\t\t\t? 'Please select gender'\n\t\t\t\t\t\t: '';\n\t\t\t\tbreak;\n\t\t\tcase 'country':\n\t\t\t\terrTxt =\n\t\t\t\t\tlen < 1\n\t\t\t\t\t\t? 'Select country'\n\t\t\t\t\t\t: '';\n\t\t\t\tbreak;\n\t\t\tcase 'region':\n\t\t\t\terrTxt =\n\t\t\t\t\tlen < 1\n\t\t\t\t\t\t? 'Select region'\n\t\t\t\t\t\t: '';\n\t\t\t\tbreak;\n\t\t\tcase 'note':\n\t\t\t\terrTxt =\n\t\t\t\t\t(len < 3 || len > 20)\n\t\t\t\t\t\t? 'Note must be min 3 characters or max 20 long! '\n\t\t\t\t\t\t: '';\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\n\t\terrors[name] = errTxt;\n\t\tlet contact = contactState.contact;\n\t\tcontact[name] = value;\n\t\tsetContactState({errors, contact, dirty: true});\n\t};\n\n\tconst handleChange = name => event => {\n\t\tevent.preventDefault();\n\t\tupdateError(event.target.value, name);\n\t};\n\n\tconst clearContact = () => {\n\t\tsetContactState({\n\t\t\tcontact: getDefaultContact(),\n\t\t\terrors: getDefaultContact()\n\t\t})\n\t};\n\n\tconst handleSubmit = () => {\n\t\tsetContactState({\n\t\t\t...contactState,\n\t\t\tnewRecordAdded: false\n\t\t});\n\t\tconst fields = Object.keys(getDefaultContact());\n\t\tfields.forEach(\n\t\t\t(name) => {\n\t\t\t\tupdateError(contactState.contact[name], name)\n\t\t\t}\n\t\t);\n\t\tif(validateForm(contactState.errors, contactState.dirty)) {\n\t\t\tnew Promise((resolve, reject) => {\n\t\t\t\tprops.addContactWatcher(contactState.contact, resolve, reject);\n\t\t\t}).then(() => {\n\t\t\t\tsetContactState({\n\t\t\t\t\t...contactState,\n\t\t\t\t\tnewRecordAdded: false\n\t\t\t\t});\n\t\t\t\tclearContact();\n\t\t\t}).catch((error) => {\n\t\t\t\tconsole.log(error);\n\t\t\t});\n\t\t}else{\n\t\t\tconsole.error('Invalid Form');\n\t\t}\n\t};\n\n\n\n\tconst {name, address, phone, email, gender, country, region, note} = contactState.contact;\n\tconst { errors, newRecordAdded } = contactState;\n\n\treturn (\n\t\t<div className='wrapper'>\n\t\t\t<div className='form-wrapper'>\n\t\t\t\t<form noValidate>\n\t\t\t\t\t<FormField\n\t\t\t\t\t\tid=\"standard-name\"\n\t\t\t\t\t\tlabel=\"Name\"\n\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\terrors={errors}\n\t\t\t\t\t\tchangeData={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t\t<FormField\n\t\t\t\t\t\tid=\"standard-address\"\n\t\t\t\t\t\tlabel=\"Address\"\n\t\t\t\t\t\tname=\"address\"\n\t\t\t\t\t\tvalue={address}\n\t\t\t\t\t\terrors={errors}\n\t\t\t\t\t\tchangeData={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t\t<FormField\n\t\t\t\t\t\tid=\"standard-phone\"\n\t\t\t\t\t\tlabel=\"Phone\"\n\t\t\t\t\t\tname=\"phone\"\n\t\t\t\t\t\tvalue={phone}\n\t\t\t\t\t\terrors={errors}\n\t\t\t\t\t\tchangeData={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t\t<FormField\n\t\t\t\t\t\tid=\"standard-email\"\n\t\t\t\t\t\tlabel=\"Email\"\n\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\terrors={errors}\n\t\t\t\t\t\tchangeData={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<RadioButtonGroup\n\t\t\t\t\t\t\tname=\"gender\"\n\t\t\t\t\t\t\terrors={errors}\n\t\t\t\t\t\t\tchangeData={handleChange}\n\t\t\t\t\t\t\tvalue={gender} />\n\t\t\t\t\t\t<CountryRegionWrapper>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tid=\"country\"\n\t\t\t\t\t\t\t\tlabel=\"Country\"\n\t\t\t\t\t\t\t\tvalue={country}\n\t\t\t\t\t\t\t\tselect\n\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\tonChange={handleChange('country')}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{CountryRegionData.map((option, index) => (\n\t\t\t\t\t\t\t\t\t<MenuItem key={index} value={option}>\n\t\t\t\t\t\t\t\t\t\t{option[0]}\n\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</TextField>\n\t\t\t\t\t\t\t{errors['country'].length > 0 &&\n\t\t\t\t\t\t\t\t<InfoText value={errors['country']} type={'error'} />}\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tid=\"region\"\n\t\t\t\t\t\t\t\tlabel=\"Region\"\n\t\t\t\t\t\t\t\tvalue={region}\n\t\t\t\t\t\t\t\tselect\n\t\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\t\tonChange={handleChange(\"region\")}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{getRegions(country).map(\n\t\t\t\t\t\t\t\t\t(option, index) => (\n\t\t\t\t\t\t\t\t\t\t<MenuItem key={index} value={option}>\n\t\t\t\t\t\t\t\t\t\t\t{option}\n\t\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</TextField>\n\t\t\t\t\t\t\t{errors['region'].length > 0 &&\n\t\t\t\t\t\t\t<InfoText value={errors['region']} type={'error'} />}\n\t\t\t\t\t\t</CountryRegionWrapper>\n\t\t\t\t\t\t<FormField\n\t\t\t\t\t\t\tid=\"standard-note\"\n\t\t\t\t\t\t\tlabel=\"Note\"\n\t\t\t\t\t\t\tname=\"note\"\n\t\t\t\t\t\t\tvalue={note}\n\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t\terrors={contactState.errors}\n\t\t\t\t\t\t\tchangeData={handleChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<ActionBar>\n\t\t\t\t\t\t\t<Button variant=\"contained\" color=\"secondary\" component=\"span\" onClick={clearContact}>\n\t\t\t\t\t\t\t\tClear\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" component=\"span\" onClick={handleSubmit}>\n\t\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</ActionBar>\n\t\t\t\t\t\t{newRecordAdded && <InfoText value={'New record added successfully!'} type={'success'} />}\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn bindActionCreators({\n\t\taddContactWatcher,\n\t\tcontactListWatcher\n\t}, dispatch);\n};\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n\n","import React from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles/index';\nimport Table from '@material-ui/core/Table/index';\nimport TableBody from '@material-ui/core/TableBody/index';\nimport TableCell from '@material-ui/core/TableCell/index';\nimport TableHead from '@material-ui/core/TableHead/index';\nimport TableRow from '@material-ui/core/TableRow/index';\nimport Paper from '@material-ui/core/Paper/index';\nimport Button from \"@material-ui/core/Button\";\nimport FormField from \"./FormField\";\nimport PropTypes from \"prop-types\";\nimport { deleteContactWatcher } from \"../actions\";\nimport { bindActionCreators } from 'redux';\nimport {connect} from \"react-redux\";\n\nconst StyledTableCell = withStyles(theme => ({\n\thead: {\n\t\tbackgroundColor: theme.palette.common.black,\n\t\tcolor: theme.palette.common.white,\n\t},\n\tbody: {\n\t\tfontSize: 14,\n\t},\n}))(TableCell);\n\nconst StyledTableRow = withStyles(theme => ({\n\troot: {\n\t\t'&:nth-of-type(odd)': {\n\t\t\tbackgroundColor: theme.palette.background.default,\n\t\t},\n\t},\n}))(TableRow);\n\nconst StyledButton = withStyles(theme => ({\n\troot: {\n\t\tpadding: '5px 0',\n\t\tminWidth: '35px',\n\t\tborderRadius: '10px'\n\t}\n}))(Button);\n\nconst useStyles = makeStyles(theme => ({\n\troot: {\n\t\twidth: '100%',\n\t\tmarginTop: theme.spacing(3),\n\t\toverflowX: 'auto',\n\t},\n\ttable: {\n\t\tminWidth: 700,\n\t},\n}));\n\nconst CustomizedTables = (props) => {\n\tconst classes = useStyles();\n\tconst { tags, records } = props;\n\n\tconst deleteItem = (index) => {\n\t\tconsole.log('deleting item');\n\t\tnew Promise((resolve, reject) => {\n\t\t\tprops.deleteContactWatcher({index}, resolve, reject);\n\t\t}).then(() => {\n\n\t\t}).catch((error) => {\n\t\t\tconsole.log(error);\n\t\t});\n\t};\n\treturn (\n\t\t<Paper className={classes.root}>\n\t\t\t<Table className={classes.table}>\n\t\t\t\t<TableHead>\n\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t{ tags && tags.map( (tag, index )=> <StyledTableCell key={index}>{tag}</StyledTableCell>) }\n\t\t\t\t\t</TableRow>\n\t\t\t\t</TableHead>\n\t\t\t\t<TableBody>\n\t\t\t\t\t{records && records.map((row, index) => (\n\t\t\t\t\t\t<StyledTableRow key={index}>\n\t\t\t\t\t\t\t<StyledTableCell component=\"th\" scope=\"row\">{row.name}</StyledTableCell>\n\t\t\t\t\t\t\t<StyledTableCell>{row.address}</StyledTableCell>\n\t\t\t\t\t\t\t<StyledTableCell>{row.phone}</StyledTableCell>\n\t\t\t\t\t\t\t<StyledTableCell>{row.email}</StyledTableCell>\n\t\t\t\t\t\t\t<StyledTableCell>{row.gender}</StyledTableCell>\n\t\t\t\t\t\t\t<StyledTableCell>{`${row.country[0]} - ${row.region}`}</StyledTableCell>\n\t\t\t\t\t\t\t<StyledTableCell>{row.note}</StyledTableCell>\n\t\t\t\t\t\t\t<StyledTableCell>\n\t\t\t\t\t\t\t\t<StyledButton\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t\t\tonClick={() => deleteItem(index)}>X\n\t\t\t\t\t\t\t\t</StyledButton>\n\t\t\t\t\t\t\t</StyledTableCell>\n\t\t\t\t\t\t</StyledTableRow>\n\t\t\t\t\t))}\n\t\t\t\t</TableBody>\n\t\t\t</Table>\n\t\t</Paper>\n\t);\n};\n\nFormField.propTypes = {\n\ttags: PropTypes.array.isRequired,\n\trecords: PropTypes.array.isRequired\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn bindActionCreators({\n\t\tdeleteContactWatcher\n\t}, dispatch);\n};\nexport default connect(null, mapDispatchToProps)(CustomizedTables);","import React from 'react';\nimport './App.css';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ContactForm from './components/ContactForm';\nimport TableComp from './components/TableComp';\nimport styled from 'styled-components';\nimport { connect } from \"react-redux\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nconst FormWrapper = styled.div`\n  padding: 20px;\n  margin: 10px;\n  border: 1px solid #ccc;\n`;\n\nconst TableCompStyled = styled(TableComp)`\n  padding: 20px;\n  margin: 10px;\n`;\n\nconst App = (props) => {\n  const classes = useStyles();\n  return (\n    <div className=\"App\">\n      <div className={classes.root}>\n        <Grid container spacing={2}>\n          <Grid item xs={12} sm={4}>\n            <FormWrapper>\n              <h1>Add new contact</h1>\n              <ContactForm />\n            </FormWrapper>\n          </Grid>\n          <Grid item xs={12} sm={8}>\n            <TableCompStyled tags={['Name', 'Address', 'Phone', 'Email', 'Gender', 'Country', 'Note', '' ]} records={props.contacts} />\n          </Grid>\n        </Grid>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  contacts: state.contact.list\n});\n\nexport default connect(mapStateToProps, null)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { handleActions } from 'redux-actions';\n\nexport default handleActions({\n\tUPDATE_LIST_WATCHER: (state, { payload }) =>\n\t\tObject.assign({}, state, {\n\t\t\tlist: payload\n\t\t}),\n\tCONTACT_LIST_WATCHER: (state, { payload }) =>\n\t\tObject.assign({}, state, {\n\t\t\tlist: payload\n\t\t}),\n}, {\n\tlist: []\n});\n","import { combineReducers } from 'redux';\nimport contact from './contact';\n\nexport default combineReducers({\n  contact\n});\n","export const storedList = (key) => { return JSON.parse(localStorage.getItem(key)) };\nexport const saveToStorage = (key, data) => { localStorage.setItem(key, JSON.stringify(data)) };\nexport const clearStorage = () => {\n\tlocalStorage.clear();\n\treturn true;\n};\n","import  { storedList, saveToStorage }  from '../utils/localstorage';\nexport function contactListApi() {\n\tconst contacts = storedList('contacts') || [];\n\treturn contacts;\n}\n\nexport function addContactApi(payload) {\n\tconst contacts = storedList('contacts') || [];\n\tcontacts.push(payload);\n\tsaveToStorage('contacts', contacts);\n\treturn contacts;\n}\n\nexport function editContactApi(action) {\n\treturn []\n}\n\nexport function deleteContactApi(index) {\n\tconst contacts = storedList('contacts') || [];\n\tcontacts.splice(index, 1);\n\tsaveToStorage('contacts', contacts);\n\treturn contacts;\n}\n\nexport function getContactApi(payload) {\n\treturn []\n}\n","import { contactListWatcher, updateListWatcher } from '../actions';\nimport { takeLatest, call, put } from 'redux-saga/effects';\nimport { contactListApi, addContactApi, editContactApi, deleteContactApi, getContactApi } from '../apis/contact';\n\nexport function* contactListEffectSaga(action) {\n    // data is obtained from browser localstorage\n    try {\n\t    let data = yield call(contactListApi);\n\t    yield put(updateListWatcher(data));\n\t} catch (e) {\n\t    console.log(e);\n\t}    \n}\n\nexport function* addContactEffectSaga(action) {\n\t// data is obtained from browser localstorage\n    try {\n\t    let data  = yield call(addContactApi, action.payload);\n\t    yield put(contactListWatcher(data));\n\t    action.resolve();\n\t} catch (e) {\n\t    console.log(e);\n\t    action.reject(e);\n\t}    \n}\n\nexport function* editContactEffectSaga(action) {\n    // data is updated in localstorage and obtained a fresh copy\n    try {\n\t    let { data } = yield call(editContactApi, action);\n\t    yield put(contactListWatcher(data));\n\t} catch (e) {\n\t    console.log(e);\n\t}    \n}\n\nexport function* getContactEffectSaga(action) {\n    // data is obtained after axios call is resolved\n    try {\n\t    let { data } = yield call(getContactApi, action.payload);\n\t} catch (e) {\n\t    console.log(e);\n\t}    \n}\n\nexport function* deleteContactEffectSaga(action) {\n\t// data is obtained after axios call is resolved\n\ttry {\n\t\tlet data  = yield call(deleteContactApi, action.payload.index);\n\t\tyield put(contactListWatcher(data));\n\t\taction.resolve();\n\t} catch (e) {\n\t\tconsole.log(e);\n\t\taction.reject(e);\n\t}\n}\n\nexport function* contactListWatcherSaga() {\n  yield takeLatest('CONTACT_LIST_WATCHER', contactListEffectSaga);\n}\n\nexport function* addContactWatcherSaga() {\n  yield takeLatest('ADD_CONTACT_WATCHER', addContactEffectSaga);\n}\n\nexport function* editContactWatcherSaga() {\n  yield takeLatest('EDIT_CONTACT_WATCHER', editContactEffectSaga);\n}\n\nexport function* getContactWatcherSaga() {\n  yield takeLatest('GET_CONTACT_WATCHER', getContactEffectSaga);\n}\n\nexport function* deleteContactWatcherSaga() {\n\tyield takeLatest('DELETE_CONTACT_WATCHER', deleteContactEffectSaga);\n}","import {all} from 'redux-saga/effects';\nimport { contactListWatcherSaga, addContactWatcherSaga, editContactWatcherSaga, getContactWatcherSaga, deleteContactWatcherSaga } from './contact';\n\nexport default function* rootSaga() {\n\tyield all([\n\t\tcontactListWatcherSaga(),\n\t\taddContactWatcherSaga(),\n\t\teditContactWatcherSaga(),\n\t\tgetContactWatcherSaga(),\n\t\tdeleteContactWatcherSaga()\n\t]);\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport createSagaMiddleware from 'redux-saga';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport { logger } from 'redux-logger';\nimport reducer from './reducers';\nimport rootSaga from './sagas';\nconst sagaMiddleware = createSagaMiddleware();\n//saga init\nconst store = createStore(\n\treducer,\n\tapplyMiddleware(sagaMiddleware, logger),\n);\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const validEmailRegex = RegExp(/^(([^<>()\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@(([0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\nconst validateForm = (errors, dirty) => {\n\tif (dirty){\n\t\tlet valid = true;\n\t\tObject.values(errors).forEach(\n\t\t\t(val) => {\n\t\t\t\tconsole.log(val);\n\t\t\t\tval.length > 0 && (valid = false)\n\t\t\t}\n\t\t);\n\t\treturn valid;\n\t}else{ return false}\n};\n\nmodule.exports = {\n\tvalidateForm: validateForm,\n\tvalidEmailRegex: validEmailRegex\n};"],"sourceRoot":""}